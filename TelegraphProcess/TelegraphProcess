clf;
clear all

B1 = 2;
B2 = -B1;
Bs = [B1,B2];
intervnum = 10;
endint = 2 * intervnum + 1;



Xzero = 0;


T = 100; %ceil(randtimes(endint));			% time
N = 2^14;		% how fine
dt = T / N;		% intervals
B = 2;		% barrier value
B2 = -B;

randn('state',sum(100*clock))		% clock to change the seed with each run

dW = sqrt(dt) * randn(1,N);

R = 4;
Dt = R * dt;
L = N / R;



randtimes1 = [exprnd(1,1,intervnum)];
new1 = zeros(1,2*intervnum);

for r = 1:intervnum
	new1(2*r) = randtimes1(r);
end

randtimes2 = [exprnd(2,1,intervnum)];
new2 = zeros(1,2*intervnum);

for r = 1:intervnum
	new2(2*r-1) = randtimes2(r);
end

randtimes = zeros(1,endint);

for k = 2:endint
	if mod(k,2) == 1
		randtimes(k) = new1(k-1);
	
	elseif mod(k,2) == 0
		randtimes(k) = new2(k-1);
	end
end



for j = 2:(endint)
	randtimes(j) = randtimes(j) + randtimes(j-1);
end

xs = [0:Dt:T];

%for con = 1:length(xs)
%	if xs(con) < T/2
%		mu = 2;
%	end
%end

%run OUTelegraph;

%for con = 1:length(xs)
%	if xs(con) > T/2
%		mu = -2;
%	end
%end

%run OUTelegraph;

line([0,0],[0,0])

for i = 2:intervnum*2+1
	hold on
	line([randtimes(i-1),randtimes(i)],[Bs(mod(i,2)+1),Bs(mod(i,2)+1)])
end 
hold off
axis([0-0.5,randtimes(endint)+0.5,B2-0.5,B1+0.5])
set(gca,'XTick',[0:1:ceil(randtimes(endint))+0.5])


funcOUtele(3,10,-1)
hold on
funcOUtele(1,7,1)


%line([0,2],[B1,B1])
%hold on
%line([2,3],[B2,B2])
%hold off
%axis([0,10,-3,3])